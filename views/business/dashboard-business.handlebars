<link rel="stylesheet" type="text/css" href="stylesheets/graph.css" />
<style>
    #retentionChart{
        background:#fefefe;
        padding: 50px 20px;
    }

    .bottom-padding{
        margin-bottom: 100px;
    }

</style>
<section class="content-header">
    <h1>Dashboard </h1>
    <div id="txt" class="pull-right"></div>
    <h1 class="pull-right" id="currentDate"></h1>
</section>

<section class="content">
    {{#if message}}
        <div class="alert alert-danger">{{message}}</div>
    {{/if}}

    <div class = "dashboard-section">
        <div class="row bottom-padding">
            <div class="col-md-12">
                <h3>Hello Charly,</h3>
                <h4>You have <strong>10</strong> upcoming appointments today.</h4>
                <hr/>
            </div>

<<<<<<< HEAD
            <div class="col-md-4 graph-col">
                <center>
                    <ul class="graph-container">
                        <li>
                            <div class="bar-wrapper">
                                <div class="bar-container">
                                    <div class="bar-background"></div>
                                    <div class="bar-inner"></div>
                                    <div class="bar-foreground"></div>
                                </div>
                            </div>
                            <div class="graph-data">{{num_checkins}}/{{num_appt}}</div>
                        </li>
                    </ul>
                    <h4>Number of Check Ins Today</h4>
                </center>
=======
        <!-- first row user stats-->
        <div class="row">
            <!-- bounce rate-->
            <div class="col col-md-4" >
                <div class ="dashboard-data-block">
                    <h1>Bounce Rate</h1>
                    <span class="main-data">89%</span> <br/>
                    <span>
                         <span>
                            <i class="fa fa-arrow-down" aria-hidden="true"></i>
                        </span>
                        <span> 3% </span>
                    </span>

                    <br/>
                    <span>6 Week Avg:</span>
                    <span class="avg-data"> 90% </span>
                    <br/>
                    <span>Last updated at: 9:30</span>
                </div> <!-- end percent-block-->
            </div><!-- end col-->

            <!-- avg site time-->
            <div class="col col-md-4" >
                <div class ="dashboard-data-block">
                    <h1>Average Time Spent on Site (minutes)</h1>
                    <span class="main-data" id="avg-session-time"></span> <br/>
                    <span>
<<<<<<< HEAD
                         <span>
                            <i class="fa fa-arrow-down" aria-hidden="true"></i>
                        </span>
                        <span> 3 </span>
=======
                        <span id="avg-session-trend">
                            
                        </span> 
                        <span id ="avg-session-diff"> </span>
>>>>>>> visuals
                    </span>

                    <br/>
                    <span>Last Week Avg:</span>
                    <span class="avg-data" id="prev-avg-session-time"></span>
                    <br/>
                </div> <!-- end percent-block-->
            </div><!-- end col-->

            <!-- avg pages visited-->
            <div class="col col-md-4" >
                <div class ="dashboard-data-block data-block-green">
                    <h1>Server Status</h1>
                    <span class="main-data">&#9650; Up</span>
                    <br/>
                    <span>
                       Last down never days ago
                    </span>
                </div> <!-- end percent-block-->
            </div><!-- end col-->

            <div class ="col-md-8">
                <div class="" id="new-visitors-chart">
                    <canvas id="serverUptimeChart" width="400" height="200"></canvas>
                </div>
>>>>>>> sgvillal-dev
            </div>
            <div class="col-md-4 graph-col">
                <center>
                    <ul class="graph-container">
                        <li>
                            <div class="bar-wrapper">
                                <div class="bar-container">
                                    <div class="bar-background"></div>
                                    <div class="bar-inner"></div>
                                    <div class="bar-foreground"></div>
                                </div>
                            </div>
                            <div class="graph-data">{{appts_past}}/{{num_appt}}</div>
                        </li>
                    </ul>
                    <h4>Total Appointments Today</h4>
                </center>

            </div>
            <div class="col-md-4 graph-col">
                <center>
                    <ul class="graph-container">
                        <li>
                            <div class="bar-wrapper">
                                <div class="bar-container">
                                    <div class="bar-background"></div>
                                    <div class="bar-inner"></div>
                                    <div class="bar-foreground"></div>
                                </div>
                            </div>
                            <div class="graph-data">{{num_appt}}/{{num_open}}</div>
                        </li>
                    </ul>
                    <h4>Appointment Openings Filled Today</h4>
                </center>
            </div>
        </div>

<<<<<<< HEAD

    </div> <!-- end container-->

=======
        <!-- second row of user stats-->
        <div class="row">
            <div class ="col-md-8">
                <!-- new visitor line chart-->
                <div class="chart" >
                    <canvas id="new-visitors-chart" width="400" height="187px"></canvas>
                </div>
            </div> <!-- end col -->

            <!-- visitor occupation pie chart-->
            <div class="col-md-4">
                <div class="chart" >
                    <canvas id ="visitor-occupations-chart" width="400" height="400px"></canvas>
                </div>
            </div><!-- end col-->
        </div> <!-- end row-->

    </div> <!-- end container-->

<<<<<<< HEAD
<!-- KAT -->
>>>>>>> sgvillal-dev
    <div class = "dashboard-section">
        <div class="row">
            <div class="col-md-12">
                <h3> Check Ins vs. Scheduled Appointments</h3>
                <h4>Check your retention stats.</h4>
                <hr/>
            </div>

            <div class="col-md-12">
                <div class="white-chart">
                    <canvas id="retentionChart"></canvas>
                </div>

            </div>
        </div>


    </div> <!-- end container-->


<<<<<<< HEAD
=======
                    <br/>
                    <span>6 Week Avg:</span>
                    <span class="avg-data"> 1 </span>
                    <br/>
                    <span>Last updated at: 9:30</span>
                </div> <!-- end percent-block-->
            </div><!-- end col-->
        </div> <!-- end row -->

    </div> <!-- end container-->
=======
    <!-- stuff we need for google analytics to work 
        but we don't want it to show up on webpage cause it's 
         ugly
    -->
<div id="embed-api-auth-container" class="hidden"></div>
<div id="view-selector-1-container" class="hidden"></div>
<div id="view-selector-2-container" class="hidden"></div>
<div id="view-selector-3-container" class="hidden"></div>
<div id="view-selector-4-container" class="hidden"></div>
    
>>>>>>> visuals
>>>>>>> sgvillal-dev

</section>

<!-- import chart.js-->
<script type="text/javascript" src= "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.min.js"></script>
<script type="text/javascript" src = "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
<script
  src="https://code.jquery.com/jquery-3.2.1.min.js"
  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
  crossorigin="anonymous"></script>

<<<<<<< HEAD
<!-- generate line chart for checkins vs appointments-->
<script>
    var ctx = document.getElementById('retentionChart').getContext('2d');
    ctx.canvas.height = 450;

    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: ["date 1", "date2", " date 3 ", "date 4", "date 5 ", "date 6", "date7"],
            datasets: [{
                label: "check ins",
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: [0, 10, 5, 2, 20, 30, 45],
                fill : false
            },
            {
                label: "appointments",
                backgroundColor: 'rgb(0, 99, 132)',
                borderColor: 'rgb(0, 99, 132)',
                data: [1, 10, 7, 5, 22, 31, 48],
                fill : false
            }]
=======
<!-- import moment-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.min.js"></script>

<!-- load google analytics embed api -->
<script>
<<<<<<< HEAD
    var ctx = document.getElementById("visitor-occupations-chart").getContext('2d');
    var myPieChart = new Chart(ctx,{
    type: 'pie',
    data: {
        labels: ["dentist", " hair dresser", "peter", "charly", "doctor"],
        datasets: [{
            label: '# of New Visitors',
            data: [12, 19, 3, 5, 2],
            fill: false,
            backgroundColor: [
                'rgba(54, 162, 235, 0.7)',
                'rgba(239, 105, 52, 0.7)',
                'rgba(188, 133, 60, 0.7)',
                'rgba(34, 45, 50, 0.7)'
            ],
            borderColor: [
                'rgba(54, 162, 235, 1)',
                'rgba(239, 105, 52, 1)',
                'rgba(188, 133, 60, 1)',
                'rgba(34, 45, 50, 1)'
            ],
            borderWidth: 1
        }]

    },
    options: {
        title: {
            display: true,
            text: 'Visitor Occupations'
        },
        responsive: true,
        responsiveAnimationDuration: 2000,

    }
});

=======
    (function(w,d,s,g,js,fs){
      g=w.gapi||(w.gapi={});g.analytics={q:[],ready:function(f){this.q.push(f);}};
      js=d.createElement(s);fs=d.getElementsByTagName(s)[0];
      js.src='https://apis.google.com/js/platform.js';
      fs.parentNode.insertBefore(js,fs);js.onload=function(){g.load('analytics');};
    }(window,document,'script'));
>>>>>>> visuals
</script>

<!-- grab data from google analytics and display on dashboard -->
<script>
<<<<<<< HEAD
var ctx = document.getElementById("new-visitors-chart").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: ["5/26", "5/27", "5/28", "5/29", "5/30"],
        datasets: [{
            label: '# of New Visitors',
            data: [12, 19, 3, 5, 2, 3],
            fill: false,
            backgroundColor: [
                'rgba(54, 162, 235, 0.2)'
            ],
            borderColor: [
                'rgba(54, 162, 235, 1)'


var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var uptimeCtx = document.getElementById("serverUptimeChart").getContext("2d");
var serverUptimeChart = new Chart(uptimeCtx, {
			type: 'line',
			data: {
				labels: ["January", "February", "March", "April", "May", "June", "July"],
				datasets: [{
					label: "Downtime (Avg: _s)",
					borderColor: 'rgba(229, 166, 35, 0.2)', // Orange
					backgroundColor: 'rgba(229, 166, 35, 1)',
					data: [0, 0, 1, 0, 0, 0, 2],
          fill: 'start'
				}, {
					label: "Uptime (_%)",
					borderColor: 'rgba(64, 226, 144, 0.2)', // Green
					backgroundColor: 'rgba(64, 226, 144, 1)',
					data: [5, 6, 5, 5, 5, 6, 5],
          fill: 'start'
				}, {
					label: "Response time",
					borderColor: 'rgba(89, 189, 229, 0.2)', // Blue
					backgroundColor: 'rgba(89, 189, 229, 1)',
					data: [10, 12, 11, 9, 10, 12, 13],
          fill: 'start'
				}]
			},
			options: {
        maintainAspectRatio: false,
        title: {
            display: true,
            text: 'Server Uptime'
        },
			spanGaps: false,
			elements: {
				line: {
					tension: 0.000001
				}
			},
			scales: {
				yAxes: [{
					stacked: false
				}]
			},
			plugins: {
				filler: {
					propagate: false
				},
				samples_filler_analyser: {
					target: 'chart-analyser'
				}
			}
  	}
});

var trafficCtx = document.getElementById("trafficSourceChart").getContext("2d");
var trafficSourceChart = new Chart(trafficCtx, {
    type: 'doughnut',
    data: {
        datasets: [{
            data: [5, 4, 3, 2, 1],
            backgroundColor: [
                'rgba(89, 189, 229, 1)',
                'rgba(64, 226, 144, 1)',
                'rgba(229, 166, 35, 1)',
                'rgba(264, 122, 159, 1)',
                'rgba(239, 54, 64, 1)'
            ],
            label: 'Dataset 1'
        }],
        labels: [
            "Facebook",
            "Twitter",
            "Instagram",
            "Myspace",
            "Other"
        ]
    },
    options: {
        title: {
            display: true,
            text: 'New Visitors per Day'
        },
        responsive: true,
        responsiveAnimationDuration: 2000,
        scales: {
            xAxes: [{
                display: true,
                scaleLabel: {
                    display: true,
                    labelString: 'Date'
                }
            }],
            yAxes: [{
                display: true,
                scaleLabel: {
                    display: true,
                    labelString: '# New Visitors'
                },
                ticks: {
                    beginAtZero:true
                }
            }]
        }
=======
gapi.analytics.ready(function() {

  /**
    * Authorize the user immediately if the user has already granted access.
    * If no access has been created, render an authorize button inside the
    * element with the ID "embed-api-auth-container".
    */
    gapi.analytics.auth.authorize({
        container: 'embed-api-auth-container',
        clientid: '341666889438-0june0o3tepvttbi6jrffa2m9592rrvf.apps.googleusercontent.com'
    });

    /**
      * Create a ViewSelector for a view to be rendered inside of
      * @param {string} id - the elementin which the view should be rendered inside of
      */
    function createViewSelector(id){
        return new gapi.analytics.ViewSelector({
            container: id
        });
    }
    
    //create google analytics view selectors
    var viewSelector1 = createViewSelector('view-selector-1-container'); //belongs to sessions per day graph
    var viewSelector2 = createViewSelector('view-selector-2-container'); //belongs to new vs returning visitors pie
    
    var viewSelector3 = createViewSelector('view-selector-3-container');
    var viewSelector4 = createViewSelector('view-selector-4-container');    

    // Render view selectors to the page.
    viewSelector1.execute();
    viewSelector2.execute();
    viewSelector3.execute();
    viewSelector4.execute();

    
    /**
      * Extend the Embed APIs `gapi.analytics.report.Data` component to
      * return a promise the is fulfilled with the value returned by the API.
      * @param {Object} params The request parameters.
      * @return {Promise} A promise.
      */
    function query(params) {
      return new Promise(function(resolve, reject) {
        var data = new gapi.analytics.report.Data({query: params});
        data.once('success', function(response) { resolve(response); })
            .once('error', function(response) { reject(response); })
            .execute();
      });
>>>>>>> visuals
    }
    /*
    */
    function createCurrTimeLineQuery(ids, dimensions, metrics, now){
        return query({
          'ids': ids,
          'dimensions': dimensions,
          'metrics': metrics,
          'start-date': moment(now).subtract(1, 'day').day(0).format('YYYY-MM-DD'),
          'end-date': moment(now).format('YYYY-MM-DD')
        });
    }
    // Set some global Chart.js defaults.
    Chart.defaults.global.animationSteps = 60;
    Chart.defaults.global.animationEasing = 'easeInOutQuart';
    Chart.defaults.global.responsive = true;
    Chart.defaults.global.maintainAspectRatio = false;
    
    /**
      * Update the first dataChart when the first view selecter is changed.
      */
    viewSelector1.on('change', function(ids) {

        var now = moment(); 

        var thisWeek = createCurrTimeLineQuery(ids, 'ga:date,ga:nthDay', 'ga:sessions', now);

        var lastWeek = query({
          'ids': ids,
          'dimensions': 'ga:date,ga:nthDay',
          'metrics': 'ga:sessions',
          'start-date': moment(now).subtract(1, 'day').day(0).subtract(1, 'week')
              .format('YYYY-MM-DD'),
          'end-date': moment(now).subtract(1, 'day').day(6).subtract(1, 'week')
              .format('YYYY-MM-DD')
        });

        Promise.all([thisWeek, lastWeek]).then(function(results) {

          var data1 = results[0].rows.map(function(row) { return +row[2]; });
          var data2 = results[1].rows.map(function(row) { return +row[2]; });
          var labels = results[1].rows.map(function(row) { return +row[0]; });

          labels = labels.map(function(label) {
            return moment(label, 'YYYYMMDD').format('ddd');
          });

          var data = {
            labels : labels,
            datasets : [
              {
                label: 'Last Week',
                fill: true,
                backgroundColor: [
                    'rgba(54, 162, 235, 0.2)'
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)'    
                ],
                borderWidth: 1,
                data : data2
              },
              {
                label: 'This Week',
                fill: true,
                backgroundColor: [
                    'rgba(255, 162, 225, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 162, 225, 1)'
                ],
                borderWidth: 1,
                data : data1
              }
            ]
          };



            var ctx = document.getElementById("new-visitors-chart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'line',
                data: data,
                options: {
                    title: {
                        display: true,
                        text: 'Sessions per Day'
                    },
                    responsive: true,
                    responsiveAnimationDuration: 2000,
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Date'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: '# New Visitors'
                            },
                            ticks: {
                                beginAtZero:true
                            }
                        }]
                    }
                }
            });
        });

    });

    /**
     * Update the second dataChart when the second view selecter is changed.
     */
    viewSelector2.on('change', function(ids) {
      query({
        'ids': ids,
        'dimensions': 'ga:userType',
        'metrics': 'ga:sessions',
        'max-results': 2
      })
      .then(function(response) {

        var data = [];
        var labels = [];
        var colors = ['rgba(54, 162, 235, 0.7)'];

        response.rows.forEach(function(row, i) {
          labels.push(row[0]);
          data.push(row[1]);
        });
 
        var ctx = document.getElementById("visitor-occupations-chart").getContext('2d');
        var myPieChart = new Chart(ctx,{
          type: 'pie',
          data: {
              labels: labels,
              datasets:[{
                  data: data,
                  backgroundColor: colors
              }]
          },
          options: {
              title: {
                  display: true,
                  text: 'New vs. Returning Visitors'
              },
              responsive: true,
              responsiveAnimationDuration: 2000,
          }  
        });
      });
    });
    

    /**
      * Update the average session times
      */
    viewSelector3.on('change', function(ids) {
        var now = moment(); // .subtract(3, 'day');

        var thisWeek = createCurrTimeLineQuery(ids, 'ga:sessionDurationBucket, ga:sessionCount', 'ga:avgSessionDuration', now);

        var lastWeek = query({
          'ids': ids,
          'dimensions': 'ga:date,ga:nthDay',
          'metrics': 'ga:avgSessionDuration',
          'start-date': moment(now).subtract(1, 'day').day(0).subtract(1, 'week')
              .format('YYYY-MM-DD'),
          'end-date': moment(now).subtract(1, 'day').day(6).subtract(1, 'week')
              .format('YYYY-MM-DD')
        });

        Promise.all([thisWeek, lastWeek]).then(function(results) {

            //avg session times in seconds for this week
            var data1 = results[0].rows.map(function(row) { return +row[2]; });
            //avg session times isn seconds for last week
            var data2 = results[1].rows.map(function(row) { return +row[2]; });

            var currWeek_avg = 0;
            for(var i = 0; i < data1.length; i++){
              currWeek_avg += data1[i];
            }

            var lastWeek_avg = 0;
            for(var i = 0; i < data2.length; i++){
              lastWeek_avg += data2[i];
            }
            currWeek_avg = (currWeek_avg/60)/(data1.length - 1);
            //convert data to minutes and seconds
            document.getElementById("avg-session-time").innerHTML = currWeek_avg.toFixed(2) ;

            lastWeek_avg = (lastWeek_avg/60)/(data1.length - 1);

            document.getElementById("prev-avg-session-time").innerHTML = lastWeek_avg.toFixed(2) ;

            var diff = currWeek_avg - lastWeek_avg;

            if(diff > 0){
                document.getElementById("avg-session-trend").innerHTML = "<i class='fa fa-arrow-up' aria-hidden='true'></i>";
            }
            else if (diff < 0){
                document.getElementById("avg-session-trend").innerHTML = "<i class='fa fa-arrow-down' aria-hidden='true'></i>";
            }
            else{ //no change

            }

            document.getElementById("avg-session-diff").innerHTML = diff;

        }); //end promise all

    });
    
    
    
    
});
</script>
<<<<<<< HEAD
<!-- end user line chart-->

<!--line chart for revenue-->
<script>
var ctx = document.getElementById("revenue-line-chart").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: ["February", "March", "April", "May", "June"],
        datasets: [{
            label: '$',
            data: [2160, 3012, 3673, 4002, 4873],
            fill: false,
            backgroundColor: [
                'rgba(54, 162, 235, 0.2)'
            ],
            borderColor: [
                'rgba(54, 162, 235, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        title: {
            display: true,
            text: 'Revenue Generated'
>>>>>>> sgvillal-dev
        },

        // Configuration options go here
        options: {
            maintainAspectRatio: false
        }
    });

</script>
=======
>>>>>>> visuals
